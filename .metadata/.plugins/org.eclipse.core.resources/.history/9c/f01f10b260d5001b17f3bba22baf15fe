package DemoappPages;

import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.util.concurrent.TimeUnit;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.FindBy;
import org.openqa.selenium.support.PageFactory;
import org.openqa.selenium.support.ui.Select;

import UtilsPackage.ImageUpload;


public class CreateProfilePage {
	
	@FindBy(xpath= "//input[@name='fullname']")
	public WebElement fullName;

	@FindBy(xpath= "//input[@name='employment_id']")
	public WebElement employmentID;
	
	@FindBy(xpath= "//input[@name='username']")
	public WebElement newUserName;
	
	@FindBy(id= "new_password")
	public WebElement newPassword;
	
	@FindBy(xpath= "//input[@name='confirm_password']")
	public WebElement confirmpassword;
	
	@FindBy(id= "check_email_addrees")
	public WebElement emailAddress;
	
	@FindBy(id= "myImg")
	public WebElement uploadImg;
	
	@FindBy(id= "user_type")
	public WebElement select;
	
	@FindBy(xpath="//span[@title='Select Designation']")
	public WebElement selectDesignation;
	
	@FindBy(xpath="//option[@Value='1' and text()='Manager']")
	public WebElement designation;
	
	@FindBy(xpath= "//button[@type='submit' and text()='Create User']")
	public WebElement createUser;
	
	public WebDriver driver;
	
	public CreateProfilePage(WebDriver driver)
	{
		this.driver=driver;
		PageFactory.initElements(driver, this);
	}
	
	public void enterFullName(String name)
	{
		fullName.sendKeys(name);
	}
	public void enterEmploymentID(String id)
	{
		employmentID.sendKeys(id);
	}
	public void enterUserName(String username)
	{
		newUserName.sendKeys(username);
	}
	public void enterPassword(String password)
	{
		newPassword.sendKeys(password);
	}
	public void confirmPassword(String password)
	{
		confirmpassword.sendKeys(password);
	}
	public void enterEmailaddress(String emailid)
	{
		emailAddress.sendKeys(emailid);
	}
	public void selectUsertype(String value)
	{
		Select dropdown=new Select(select);
		dropdown.selectByVisibleText(value);
		}
	
	public void selectDesignation() {
		selectDesignation.click();
		designation.click();
		}
	
	public void uploadImage(WebDriver driver) {
		Actions obj=new Actions(driver);
		obj.moveToElement(uploadImg).click().build().perform();
		try {
			Robot robot=new Robot();
			robot.setAutoDelay(2000);
			StringSelection stringSelection=new StringSelection("C:\\Users\\danniyax\\Downloads\\768px-Eo_circle_brown_letter-a.svg.png");
			Toolkit.getDefaultToolkit().getSystemClipboard().setContents(stringSelection, null);
			robot.setAutoDelay(1000);
			robot.keyPress(KeyEvent.VK_CONTROL);
			robot.keyPress(KeyEvent.VK_V);
			robot.keyRelease(KeyEvent.VK_CONTROL);
			robot.keyRelease(KeyEvent.VK_V);
			robot.setAutoDelay(1000);
			robot.keyPress(KeyEvent.VK_ENTER);
			robot.keyRelease(KeyEvent.VK_ENTER);
		}
		catch(Exception e)  {
			e.printStackTrace();
		}
		} 

	public void createUser() {
		createUser.click();
		
	}

	

	
}
